// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MorgueTrackerMVC.Migrations
{
    [DbContext(typeof(MorgueTrackerContext))]
    [Migration("20230810014529_UpdateTables")]
    partial class UpdateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MorgueTrackerMVC.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MorgueTrackerMVC.Models.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InEmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("LocationInMorgue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientID");

                    b.HasIndex("InEmployeeID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("MorgueTrackerMVC.Models.Release", b =>
                {
                    b.Property<int>("ReleaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReleaseID"));

                    b.Property<string>("FuneralHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuneralHomeEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OutEmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickedUpDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReleaseID");

                    b.HasIndex("OutEmployeeID");

                    b.HasIndex("PatientID");

                    b.ToTable("Releases");
                });

            modelBuilder.Entity("MorgueTrackerMVC.Models.Patient", b =>
                {
                    b.HasOne("MorgueTrackerMVC.Models.Employee", "InEmployee")
                        .WithMany()
                        .HasForeignKey("InEmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InEmployee");
                });

            modelBuilder.Entity("MorgueTrackerMVC.Models.Release", b =>
                {
                    b.HasOne("MorgueTrackerMVC.Models.Employee", "OutEmployee")
                        .WithMany()
                        .HasForeignKey("OutEmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MorgueTrackerMVC.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OutEmployee");

                    b.Navigation("Patient");
                });
#pragma warning restore 612, 618
        }
    }
}
